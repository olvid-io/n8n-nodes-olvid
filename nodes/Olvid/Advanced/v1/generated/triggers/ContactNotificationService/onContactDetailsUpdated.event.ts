// @generated by protoc-gen-n8n-actions v1 with parameter "target=ts"
// @generated from file olvid/daemon/services/v1/notification_service.proto (package olvid.daemon.services.v1, syntax proto3)
/* eslint-disable */

import { OlvidClient, notifications, datatypes } from '@olvid/bot-node';
import type { ITriggerFunctions } from 'n8n-workflow';

export function contactDetailsUpdated(this: ITriggerFunctions, client: OlvidClient, onCallback?: Function, returnMockData: boolean = false): Function {
    if (returnMockData) {
        this.emit([this.helpers.returnJsonArray([{
// contact.mockData,
// previousDetails.mockData
        }])]);
        onCallback?.();
        return () => {};
    }

	const callback = (notification: notifications.ContactDetailsUpdatedNotification) => {
		this.emit([this.helpers.returnJsonArray([{contact: {id: Number(notification?.contact?.id), displayName: notification?.contact?.displayName, details: {firstName: notification?.contact?.details?.firstName, lastName: notification?.contact?.details?.lastName, company: notification?.contact?.details?.company, position: notification?.contact?.details?.position}, establishedChannelCount: notification?.contact?.establishedChannelCount, deviceCount: notification?.contact?.deviceCount, hasOneToOneDiscussion: notification?.contact?.hasOneToOneDiscussion, hasAPhoto: notification?.contact?.hasAPhoto, keycloakManaged: notification?.contact?.keycloakManaged}},{previousDetails: {firstName: notification?.previousDetails?.firstName, lastName: notification?.previousDetails?.lastName, company: notification?.previousDetails?.company, position: notification?.previousDetails?.position}}])]);
		onCallback?.();
	}

	return client.stubs.contactNotificationStub.contactDetailsUpdated({}, callback, () => {});
}
