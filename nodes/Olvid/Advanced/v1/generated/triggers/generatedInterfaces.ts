// @generated by protoc-gen-n8n-actions v1 with parameter "target=ts"
import { invitationReceived } from "./InvitationNotificationService/onInvitationReceived.event";
import { invitationSent } from "./InvitationNotificationService/onInvitationSent.event";
import { invitationDeleted } from "./InvitationNotificationService/onInvitationDeleted.event";
import { invitationUpdated } from "./InvitationNotificationService/onInvitationUpdated.event";
import { contactNew } from "./ContactNotificationService/onContactNew.event";
import { contactDeleted } from "./ContactNotificationService/onContactDeleted.event";
import { contactDetailsUpdated } from "./ContactNotificationService/onContactDetailsUpdated.event";
import { contactPhotoUpdated } from "./ContactNotificationService/onContactPhotoUpdated.event";
import { groupNew } from "./GroupNotificationService/onGroupNew.event";
import { groupDeleted } from "./GroupNotificationService/onGroupDeleted.event";
import { groupNameUpdated } from "./GroupNotificationService/onGroupNameUpdated.event";
import { groupPhotoUpdated } from "./GroupNotificationService/onGroupPhotoUpdated.event";
import { groupDescriptionUpdated } from "./GroupNotificationService/onGroupDescriptionUpdated.event";
import { groupPendingMemberAdded } from "./GroupNotificationService/onGroupPendingMemberAdded.event";
import { groupPendingMemberRemoved } from "./GroupNotificationService/onGroupPendingMemberRemoved.event";
import { groupMemberJoined } from "./GroupNotificationService/onGroupMemberJoined.event";
import { groupMemberLeft } from "./GroupNotificationService/onGroupMemberLeft.event";
import { groupOwnPermissionsUpdated } from "./GroupNotificationService/onGroupOwnPermissionsUpdated.event";
import { groupMemberPermissionsUpdated } from "./GroupNotificationService/onGroupMemberPermissionsUpdated.event";
import { groupUpdateInProgress } from "./GroupNotificationService/onGroupUpdateInProgress.event";
import { groupUpdateFinished } from "./GroupNotificationService/onGroupUpdateFinished.event";
import { discussionNew } from "./DiscussionNotificationService/onDiscussionNew.event";
import { discussionLocked } from "./DiscussionNotificationService/onDiscussionLocked.event";
import { discussionTitleUpdated } from "./DiscussionNotificationService/onDiscussionTitleUpdated.event";
import { discussionSettingsUpdated } from "./DiscussionNotificationService/onDiscussionSettingsUpdated.event";
import { messageReceived } from "./MessageNotificationService/onMessageReceived.event";
import { messageSent } from "./MessageNotificationService/onMessageSent.event";
import { messageDeleted } from "./MessageNotificationService/onMessageDeleted.event";
import { messageBodyUpdated } from "./MessageNotificationService/onMessageBodyUpdated.event";
import { messageUploaded } from "./MessageNotificationService/onMessageUploaded.event";
import { messageDelivered } from "./MessageNotificationService/onMessageDelivered.event";
import { messageRead } from "./MessageNotificationService/onMessageRead.event";
import { messageLocationReceived } from "./MessageNotificationService/onMessageLocationReceived.event";
import { messageLocationSent } from "./MessageNotificationService/onMessageLocationSent.event";
import { messageLocationSharingStart } from "./MessageNotificationService/onMessageLocationSharingStart.event";
import { messageLocationSharingUpdate } from "./MessageNotificationService/onMessageLocationSharingUpdate.event";
import { messageLocationSharingEnd } from "./MessageNotificationService/onMessageLocationSharingEnd.event";
import { messageReactionAdded } from "./MessageNotificationService/onMessageReactionAdded.event";
import { messageReactionUpdated } from "./MessageNotificationService/onMessageReactionUpdated.event";
import { messageReactionRemoved } from "./MessageNotificationService/onMessageReactionRemoved.event";
import { attachmentReceived } from "./AttachmentNotificationService/onAttachmentReceived.event";
import { attachmentUploaded } from "./AttachmentNotificationService/onAttachmentUploaded.event";

export const LISTENER_TYPES = {
    INVITATIONRECEIVED: 'invitationReceived',
    INVITATIONSENT: 'invitationSent',
    INVITATIONDELETED: 'invitationDeleted',
    INVITATIONUPDATED: 'invitationUpdated',
    CONTACTNEW: 'contactNew',
    CONTACTDELETED: 'contactDeleted',
    CONTACTDETAILSUPDATED: 'contactDetailsUpdated',
    CONTACTPHOTOUPDATED: 'contactPhotoUpdated',
    GROUPNEW: 'groupNew',
    GROUPDELETED: 'groupDeleted',
    GROUPNAMEUPDATED: 'groupNameUpdated',
    GROUPPHOTOUPDATED: 'groupPhotoUpdated',
    GROUPDESCRIPTIONUPDATED: 'groupDescriptionUpdated',
    GROUPPENDINGMEMBERADDED: 'groupPendingMemberAdded',
    GROUPPENDINGMEMBERREMOVED: 'groupPendingMemberRemoved',
    GROUPMEMBERJOINED: 'groupMemberJoined',
    GROUPMEMBERLEFT: 'groupMemberLeft',
    GROUPOWNPERMISSIONSUPDATED: 'groupOwnPermissionsUpdated',
    GROUPMEMBERPERMISSIONSUPDATED: 'groupMemberPermissionsUpdated',
    GROUPUPDATEINPROGRESS: 'groupUpdateInProgress',
    GROUPUPDATEFINISHED: 'groupUpdateFinished',
    DISCUSSIONNEW: 'discussionNew',
    DISCUSSIONLOCKED: 'discussionLocked',
    DISCUSSIONTITLEUPDATED: 'discussionTitleUpdated',
    DISCUSSIONSETTINGSUPDATED: 'discussionSettingsUpdated',
    MESSAGERECEIVED: 'messageReceived',
    MESSAGESENT: 'messageSent',
    MESSAGEDELETED: 'messageDeleted',
    MESSAGEBODYUPDATED: 'messageBodyUpdated',
    MESSAGEUPLOADED: 'messageUploaded',
    MESSAGEDELIVERED: 'messageDelivered',
    MESSAGEREAD: 'messageRead',
    MESSAGELOCATIONRECEIVED: 'messageLocationReceived',
    MESSAGELOCATIONSENT: 'messageLocationSent',
    MESSAGELOCATIONSHARINGSTART: 'messageLocationSharingStart',
    MESSAGELOCATIONSHARINGUPDATE: 'messageLocationSharingUpdate',
    MESSAGELOCATIONSHARINGEND: 'messageLocationSharingEnd',
    MESSAGEREACTIONADDED: 'messageReactionAdded',
    MESSAGEREACTIONUPDATED: 'messageReactionUpdated',
    MESSAGEREACTIONREMOVED: 'messageReactionRemoved',
    ATTACHMENTRECEIVED: 'attachmentReceived',
    ATTACHMENTUPLOADED: 'attachmentUploaded',
} as const;

export const listenerMap = {
    [LISTENER_TYPES.INVITATIONRECEIVED]: invitationReceived,
    [LISTENER_TYPES.INVITATIONSENT]: invitationSent,
    [LISTENER_TYPES.INVITATIONDELETED]: invitationDeleted,
    [LISTENER_TYPES.INVITATIONUPDATED]: invitationUpdated,
    [LISTENER_TYPES.CONTACTNEW]: contactNew,
    [LISTENER_TYPES.CONTACTDELETED]: contactDeleted,
    [LISTENER_TYPES.CONTACTDETAILSUPDATED]: contactDetailsUpdated,
    [LISTENER_TYPES.CONTACTPHOTOUPDATED]: contactPhotoUpdated,
    [LISTENER_TYPES.GROUPNEW]: groupNew,
    [LISTENER_TYPES.GROUPDELETED]: groupDeleted,
    [LISTENER_TYPES.GROUPNAMEUPDATED]: groupNameUpdated,
    [LISTENER_TYPES.GROUPPHOTOUPDATED]: groupPhotoUpdated,
    [LISTENER_TYPES.GROUPDESCRIPTIONUPDATED]: groupDescriptionUpdated,
    [LISTENER_TYPES.GROUPPENDINGMEMBERADDED]: groupPendingMemberAdded,
    [LISTENER_TYPES.GROUPPENDINGMEMBERREMOVED]: groupPendingMemberRemoved,
    [LISTENER_TYPES.GROUPMEMBERJOINED]: groupMemberJoined,
    [LISTENER_TYPES.GROUPMEMBERLEFT]: groupMemberLeft,
    [LISTENER_TYPES.GROUPOWNPERMISSIONSUPDATED]: groupOwnPermissionsUpdated,
    [LISTENER_TYPES.GROUPMEMBERPERMISSIONSUPDATED]: groupMemberPermissionsUpdated,
    [LISTENER_TYPES.GROUPUPDATEINPROGRESS]: groupUpdateInProgress,
    [LISTENER_TYPES.GROUPUPDATEFINISHED]: groupUpdateFinished,
    [LISTENER_TYPES.DISCUSSIONNEW]: discussionNew,
    [LISTENER_TYPES.DISCUSSIONLOCKED]: discussionLocked,
    [LISTENER_TYPES.DISCUSSIONTITLEUPDATED]: discussionTitleUpdated,
    [LISTENER_TYPES.DISCUSSIONSETTINGSUPDATED]: discussionSettingsUpdated,
    [LISTENER_TYPES.MESSAGERECEIVED]: messageReceived,
    [LISTENER_TYPES.MESSAGESENT]: messageSent,
    [LISTENER_TYPES.MESSAGEDELETED]: messageDeleted,
    [LISTENER_TYPES.MESSAGEBODYUPDATED]: messageBodyUpdated,
    [LISTENER_TYPES.MESSAGEUPLOADED]: messageUploaded,
    [LISTENER_TYPES.MESSAGEDELIVERED]: messageDelivered,
    [LISTENER_TYPES.MESSAGEREAD]: messageRead,
    [LISTENER_TYPES.MESSAGELOCATIONRECEIVED]: messageLocationReceived,
    [LISTENER_TYPES.MESSAGELOCATIONSENT]: messageLocationSent,
    [LISTENER_TYPES.MESSAGELOCATIONSHARINGSTART]: messageLocationSharingStart,
    [LISTENER_TYPES.MESSAGELOCATIONSHARINGUPDATE]: messageLocationSharingUpdate,
    [LISTENER_TYPES.MESSAGELOCATIONSHARINGEND]: messageLocationSharingEnd,
    [LISTENER_TYPES.MESSAGEREACTIONADDED]: messageReactionAdded,
    [LISTENER_TYPES.MESSAGEREACTIONUPDATED]: messageReactionUpdated,
    [LISTENER_TYPES.MESSAGEREACTIONREMOVED]: messageReactionRemoved,
    [LISTENER_TYPES.ATTACHMENTRECEIVED]: attachmentReceived,
    [LISTENER_TYPES.ATTACHMENTUPLOADED]: attachmentUploaded,
};

export type ListenerType = typeof LISTENER_TYPES[keyof typeof LISTENER_TYPES]
