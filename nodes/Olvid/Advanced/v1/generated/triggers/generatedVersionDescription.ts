// @generated by protoc-gen-n8n-actions v1 with parameter "target=ts"

import type { INodePropertyOptions } from 'n8n-workflow';
import { LISTENER_TYPES } from './generatedInterfaces';

export const generatedDescriptions: INodePropertyOptions[] = [
  { name: 'InvitationReceived', value: LISTENER_TYPES.INVITATIONRECEIVED },
  { name: 'InvitationSent', value: LISTENER_TYPES.INVITATIONSENT },
  { name: 'InvitationDeleted', value: LISTENER_TYPES.INVITATIONDELETED },
  { name: 'InvitationUpdated', value: LISTENER_TYPES.INVITATIONUPDATED },
  { name: 'ContactNew', value: LISTENER_TYPES.CONTACTNEW },
  { name: 'ContactDeleted', value: LISTENER_TYPES.CONTACTDELETED },
  { name: 'ContactDetailsUpdated', value: LISTENER_TYPES.CONTACTDETAILSUPDATED },
  { name: 'ContactPhotoUpdated', value: LISTENER_TYPES.CONTACTPHOTOUPDATED },
  { name: 'GroupNew', value: LISTENER_TYPES.GROUPNEW },
  { name: 'GroupDeleted', value: LISTENER_TYPES.GROUPDELETED },
  { name: 'GroupNameUpdated', value: LISTENER_TYPES.GROUPNAMEUPDATED },
  { name: 'GroupPhotoUpdated', value: LISTENER_TYPES.GROUPPHOTOUPDATED },
  { name: 'GroupDescriptionUpdated', value: LISTENER_TYPES.GROUPDESCRIPTIONUPDATED },
  { name: 'GroupPendingMemberAdded', value: LISTENER_TYPES.GROUPPENDINGMEMBERADDED },
  { name: 'GroupPendingMemberRemoved', value: LISTENER_TYPES.GROUPPENDINGMEMBERREMOVED },
  { name: 'GroupMemberJoined', value: LISTENER_TYPES.GROUPMEMBERJOINED },
  { name: 'GroupMemberLeft', value: LISTENER_TYPES.GROUPMEMBERLEFT },
  { name: 'GroupOwnPermissionsUpdated', value: LISTENER_TYPES.GROUPOWNPERMISSIONSUPDATED },
  { name: 'GroupMemberPermissionsUpdated', value: LISTENER_TYPES.GROUPMEMBERPERMISSIONSUPDATED },
  { name: 'GroupUpdateInProgress', value: LISTENER_TYPES.GROUPUPDATEINPROGRESS },
  { name: 'GroupUpdateFinished', value: LISTENER_TYPES.GROUPUPDATEFINISHED },
  { name: 'DiscussionNew', value: LISTENER_TYPES.DISCUSSIONNEW },
  { name: 'DiscussionLocked', value: LISTENER_TYPES.DISCUSSIONLOCKED },
  { name: 'DiscussionTitleUpdated', value: LISTENER_TYPES.DISCUSSIONTITLEUPDATED },
  { name: 'DiscussionSettingsUpdated', value: LISTENER_TYPES.DISCUSSIONSETTINGSUPDATED },
  { name: 'MessageReceived', value: LISTENER_TYPES.MESSAGERECEIVED },
  { name: 'MessageSent', value: LISTENER_TYPES.MESSAGESENT },
  { name: 'MessageDeleted', value: LISTENER_TYPES.MESSAGEDELETED },
  { name: 'MessageBodyUpdated', value: LISTENER_TYPES.MESSAGEBODYUPDATED },
  { name: 'MessageUploaded', value: LISTENER_TYPES.MESSAGEUPLOADED },
  { name: 'MessageDelivered', value: LISTENER_TYPES.MESSAGEDELIVERED },
  { name: 'MessageRead', value: LISTENER_TYPES.MESSAGEREAD },
  { name: 'MessageLocationReceived', value: LISTENER_TYPES.MESSAGELOCATIONRECEIVED },
  { name: 'MessageLocationSent', value: LISTENER_TYPES.MESSAGELOCATIONSENT },
  { name: 'MessageLocationSharingStart', value: LISTENER_TYPES.MESSAGELOCATIONSHARINGSTART },
  { name: 'MessageLocationSharingUpdate', value: LISTENER_TYPES.MESSAGELOCATIONSHARINGUPDATE },
  { name: 'MessageLocationSharingEnd', value: LISTENER_TYPES.MESSAGELOCATIONSHARINGEND },
  { name: 'MessageReactionAdded', value: LISTENER_TYPES.MESSAGEREACTIONADDED },
  { name: 'MessageReactionUpdated', value: LISTENER_TYPES.MESSAGEREACTIONUPDATED },
  { name: 'MessageReactionRemoved', value: LISTENER_TYPES.MESSAGEREACTIONREMOVED },
  { name: 'AttachmentReceived', value: LISTENER_TYPES.ATTACHMENTRECEIVED },
  { name: 'AttachmentUploaded', value: LISTENER_TYPES.ATTACHMENTUPLOADED },

];
