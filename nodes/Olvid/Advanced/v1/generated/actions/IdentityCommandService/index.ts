// @generated by protoc-gen-n8n-actions v1 with parameter "target=ts"

import type { INodeProperties } from 'n8n-workflow';
import * as IdentityGet from './identityGet.operation';
import * as IdentityGetBytesIdentifier from './identityGetBytesIdentifier.operation';
import * as IdentityGetInvitationLink from './identityGetInvitationLink.operation';
import * as IdentityUpdateDetails from './identityUpdateDetails.operation';
import * as IdentityRemovePhoto from './identityRemovePhoto.operation';
import * as IdentitySetPhoto from './identitySetPhoto.operation';
import * as IdentityDownloadPhoto from './identityDownloadPhoto.operation';
import * as IdentityKeycloakBind from './identityKeycloakBind.operation';
import * as IdentityKeycloakUnbind from './identityKeycloakUnbind.operation';
import * as IdentitySetApiKey from './identitySetApiKey.operation';
import * as IdentitySetConfigurationLink from './identitySetConfigurationLink.operation';

export { IdentityGet, IdentityGetBytesIdentifier, IdentityGetInvitationLink, IdentityUpdateDetails, IdentityRemovePhoto, IdentitySetPhoto, IdentityDownloadPhoto, IdentityKeycloakBind, IdentityKeycloakUnbind, IdentitySetApiKey, IdentitySetConfigurationLink};

export const descriptions: INodeProperties[] = [
  {
    displayName: 'Operation',
    name: 'operation',
    type: 'options',
    noDataExpression: true,
    displayOptions: {
      show: {
        resource: ['IdentityCommandService'],
      },
    },
    // eslint-disable-next-line n8n-nodes-base/node-param-options-type-unsorted-items
    options: [
      {
        name: 'IdentityGet',
        value: 'IdentityGet',
        action: 'Identity get',
      },
      {
        name: 'IdentityGetBytesIdentifier',
        value: 'IdentityGetBytesIdentifier',
        action: 'Identity get bytes identifier',
      },
      {
        name: 'IdentityGetInvitationLink',
        value: 'IdentityGetInvitationLink',
        action: 'Identity get invitation link',
      },
      {
        name: 'IdentityUpdateDetails',
        value: 'IdentityUpdateDetails',
        action: 'Identity update details',
      },
      {
        name: 'IdentityRemovePhoto',
        value: 'IdentityRemovePhoto',
        action: 'Identity remove photo',
      },
      {
        name: 'IdentitySetPhoto',
        value: 'IdentitySetPhoto',
        action: 'Identity set photo',
      },
      {
        name: 'IdentityDownloadPhoto',
        value: 'IdentityDownloadPhoto',
        action: 'Identity download photo',
      },
      {
        name: 'IdentityKeycloakBind',
        value: 'IdentityKeycloakBind',
        action: 'Identity keycloak bind',
      },
      {
        name: 'IdentityKeycloakUnbind',
        value: 'IdentityKeycloakUnbind',
        action: 'Identity keycloak unbind',
      },
      {
        name: 'IdentitySetApiKey',
        value: 'IdentitySetApiKey',
        action: 'Identity set api key',
      },
      {
        name: 'IdentitySetConfigurationLink',
        value: 'IdentitySetConfigurationLink',
        action: 'Identity set configuration link',
      },
    ],
    default: 'IdentityGet',
  },
  ...IdentityGet.description,
  ...IdentityGetBytesIdentifier.description,
  ...IdentityGetInvitationLink.description,
  ...IdentityUpdateDetails.description,
  ...IdentityRemovePhoto.description,
  ...IdentitySetPhoto.description,
  ...IdentityDownloadPhoto.description,
  ...IdentityKeycloakBind.description,
  ...IdentityKeycloakUnbind.description,
  ...IdentitySetApiKey.description,
  ...IdentitySetConfigurationLink.description,
];
