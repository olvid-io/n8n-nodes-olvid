// @generated by protoc-gen-n8n-actions v1 with parameter "target=ts"

import type { INodeProperties } from 'n8n-workflow';
import * as DiscussionList from './discussionList.operation';
import * as DiscussionGet from './discussionGet.operation';
import * as DiscussionGetBytesIdentifier from './discussionGetBytesIdentifier.operation';
import * as DiscussionGetByContact from './discussionGetByContact.operation';
import * as DiscussionGetByGroup from './discussionGetByGroup.operation';
import * as DiscussionEmpty from './discussionEmpty.operation';
import * as DiscussionSettingsGet from './discussionSettingsGet.operation';
import * as DiscussionSettingsSet from './discussionSettingsSet.operation';
import * as DiscussionLockedList from './discussionLockedList.operation';
import * as DiscussionLockedDelete from './discussionLockedDelete.operation';

export { DiscussionList, DiscussionGet, DiscussionGetBytesIdentifier, DiscussionGetByContact, DiscussionGetByGroup, DiscussionEmpty, DiscussionSettingsGet, DiscussionSettingsSet, DiscussionLockedList, DiscussionLockedDelete};

export const descriptions: INodeProperties[] = [
  {
    displayName: 'Operation',
    name: 'operation',
    type: 'options',
    noDataExpression: true,
    displayOptions: {
      show: {
        resource: ['DiscussionCommandService'],
      },
    },
    // eslint-disable-next-line n8n-nodes-base/node-param-options-type-unsorted-items
    options: [
      {
        name: 'DiscussionList',
        value: 'DiscussionList',
        action: 'Discussion list',
      },
      {
        name: 'DiscussionGet',
        value: 'DiscussionGet',
        action: 'Discussion get',
      },
      {
        name: 'DiscussionGetBytesIdentifier',
        value: 'DiscussionGetBytesIdentifier',
        action: 'Discussion get bytes identifier',
      },
      {
        name: 'DiscussionGetByContact',
        value: 'DiscussionGetByContact',
        action: 'Discussion get by contact',
      },
      {
        name: 'DiscussionGetByGroup',
        value: 'DiscussionGetByGroup',
        action: 'Discussion get by group',
      },
      {
        name: 'DiscussionEmpty',
        value: 'DiscussionEmpty',
        action: 'Discussion empty',
      },
      {
        name: 'DiscussionSettingsGet',
        value: 'DiscussionSettingsGet',
        action: 'Discussion settings get',
      },
      {
        name: 'DiscussionSettingsSet',
        value: 'DiscussionSettingsSet',
        action: 'Discussion settings set',
      },
      {
        name: 'DiscussionLockedList',
        value: 'DiscussionLockedList',
        action: 'Discussion locked list',
      },
      {
        name: 'DiscussionLockedDelete',
        value: 'DiscussionLockedDelete',
        action: 'Discussion locked delete',
      },
    ],
    default: 'DiscussionList',
  },
  ...DiscussionList.description,
  ...DiscussionGet.description,
  ...DiscussionGetBytesIdentifier.description,
  ...DiscussionGetByContact.description,
  ...DiscussionGetByGroup.description,
  ...DiscussionEmpty.description,
  ...DiscussionSettingsGet.description,
  ...DiscussionSettingsSet.description,
  ...DiscussionLockedList.description,
  ...DiscussionLockedDelete.description,
];
