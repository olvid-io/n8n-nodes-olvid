// @generated by protoc-gen-n8n-actions v1 with parameter "target=ts"
// @generated from file olvid/daemon/services/v1/command_service.proto (package olvid.daemon.services.v1, syntax proto3)
/* eslint-disable */

import { type IExecuteFunctions, type INodeExecutionData, type IDataObject, type INodeProperties, updateDisplayOptions } from 'n8n-workflow';

// noinspection ES6UnusedImports
import { datatypes, OlvidClient, commands } from '@olvid/bot-node';

const properties: INodeProperties[] = [
  {
    displayName: 'DiscussionId',
    name: 'discussionId',
    type: 'number',
    required: true,

    default: 0,
  },
  {
    displayName: 'Key',
    name: 'key',
    type: 'string',
    required: true,

    default: '',
  },
];

const displayOptions = {
  show: {
    resource: ['DiscussionStorageCommandService'],
    operation: ['DiscussionStorageUnset'],
  },
};

export const description = updateDisplayOptions(displayOptions, properties);

export async function execute(this: IExecuteFunctions, index: number, client: OlvidClient): Promise<INodeExecutionData[]> {
    const discussionId: bigint = BigInt(this.getNodeParameter('discussionId', index) as number);
    const key: string = this.getNodeParameter('key', index) as string;
    const response: commands.DiscussionStorageUnsetResponse = await client.stubs.discussionStorageCommandStub.discussionStorageUnset({discussionId, key});
    return this.helpers.returnJsonArray({previousValue: response?.previousValue
});
}
